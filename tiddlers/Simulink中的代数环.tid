created: 20230423031239554
creator: hanassel
modified: 20230423033430133
modifier: hanassel
tags: simulink double-sampling DSM
title: Simulink中的代数环
type: text/vnd.tiddlywiki

! Double Sampling的两种传输函数
DoubleSampling的基本原理是，对输入信号进行两次采样，从而达到提升3dB SNR的效果。因此便存在两种处理方式。

* 将输入信号翻倍，等效提升采样频率到2*Fs
*> 传输函数(1+Z^^-1^^)/(1-Z^^-1^^)
*> 参考论文 [[Low Cost, Single-ended, 2M Ohm Input Impedance 98dB Stereo Audio A/D Converter With a Novel Front-end Sampling Network|https://ieeexplore.ieee.org/document/4099814]]
* 将KTC降低一半，即真正地提升采样频率到2*Fs
*> 传输函数(1+Z^^-0.5^^)/(1-Z^^-0.5^^)
*> 参考论文 [[A 128ksps 120dB THD Low Noise Analog Front End|https://ieeexplore.ieee.org/document/9911425]]

! Simulink中的Double Sampling实现
在Simulink中有如下两种实现DoubleSampling的(1+Z^^-1^^)/(1-Z^^-1^^)的方式这两种方式分别会产生数量不同的代数环。在描述代数环之前，需要给出一个『代数环』的概念。

* 代数环
> [[Algebraic Loop Concepts|https://www.mathworks.com/help/simulink/ug/algebraic-loops.html]]
> 简单来说，就是在一个反馈系统里面，输入和反馈回来的信号之间不存在相位差，因此在模拟仿真上会出现无限运算的死循环，详见上述链接

!! 第一种Double Sampling实现方式

[img[Simulink中的代数环-01.jpg]]

这种实现方式里，暗红色和浅绿色均为代数环。

!! 第二种Double Sampling实现方式

[img[Simulink中的代数环-02.jpg]]

这种实现方式里，暗红色的为代数环，只有一个。


! 目前采用的模拟Double Sampling的方法
DoubleSampling的传输函数(1+Z^^-1^^)/(1-Z^^-1^^)所代表的原理，可以认为是等效地针对输入信号进行翻倍，因此为了规避『代数环』的问题，在Simulink中采用了将signal和dac反馈信号在int1的系数进行翻倍的方式，来等效地模拟Double Sampling，此方法与实际有较为良好的匹配。

所以有没有一种方法，能够在Simulink中，真正地模拟出Double Sampling的两种传输函数(1+Z^^-1^^)/(1-Z^^-1^^)和(1+Z^^-0.5^^)/(1-Z^^-0.5^^)？